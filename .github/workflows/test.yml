# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Run tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  frontend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: setup node.js
      uses: actions/setup-node@v3
      with:
        node-version: 16.x
    - name: install frontend dependencies
      run: cd pweb_frontend && npm ci
    - name: lint frontend
      run: cd pweb_frontend && npm run lint
    - name: build frontend
      run: cd pweb_frontend && npm run build --if-present
    - name: frontend tests
      run: cd pweb_frontend && npm run test
      
  api:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
      - name: setup dotnet
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '6.x'
      - name: dotnet restore
        run: cd bePetAway && dotnet restore
      - name: build api
        run: cd bePetAway && dotnet build
      - name: api tests
        run: cd bePetAway && dotnet test
  
  mailService:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: setup node.js
      uses: actions/setup-node@v3
      with:
        node-version: 16.x
    - name: install mail service dependencies
      run: cd mailService && npm ci
    - name: lint mailService
      run: cd mailService && npm run lint
    - name: build mailService
      run: cd mailService && npm run build --if-present
    - name: mailService tests
      run: cd mailService && npm run test

  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
            
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: idpreg.azurecr.io
          username: ${{ secrets.DOCKER_REG_USER }}
          password: ${{ secrets.DOCKER_REG_PASSWORD }}
      
      - name: Build and push api docker image
        uses: docker/build-push-action@v2
        with:
          context: ./bePetAway
          tags: idpreg.azurecr.io/api
          push: ${{ github.ref == 'refs/heads/main' }}
      
      - name: Build and push frontend docker image
        uses: docker/build-push-action@v2
        with:
          context: ./pweb_frontend
          tags: idpreg.azurecr.io/frontend
          push: ${{ github.ref == 'refs/heads/main' }}
      
      - name: Build and push mail service docker image
        uses: docker/build-push-action@v2
        with:
          context: ./mailService
          tags: idpreg.azurecr.io/mail-service
          push: ${{ github.ref == 'refs/heads/main' }}

      - name: Deploy to server
        uses: distributhor/workflow-webhook@v2
        env:
          webhook_url: ${{secrets.DEV_WEBHOOK}}