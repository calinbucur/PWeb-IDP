version: '3.3'

services:
  database:
    image: postgres:14.2-alpine
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: db
    volumes:
      - dbvolume:/var/lib/postgresql/data
  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: user@test.com
      PGADMIN_DEFAULT_PASSWORD: password
    ports:
      - "5050:80"
    depends_on:
      - database
    volumes:
      - pgadmindata:/var/lib/pgadmin
  rabbitmq:
    image: rabbitmq:3.10-management-alpine
    environment:
      - "RABBITMQ_DEFAULT_PASS=password"
      - "RABBITMQ_DEFAULT_USER=username"
    ports:
      - 15672:15672
      - 5672:5672
    volumes:
      - rabbitmqdata:/var/lib/rabbitmq/
      - rabbitmqlogs:/var/log/rabbitmq/
  api:
    image: idpreg.azurecr.io/api
    ports:
      - 5000:5000
      - 5001:5001
  mail:
    image: idpreg.azurecr.io/mail-service
  frontend:
    image: idpreg.azurecr.io/frontend
    ports:
      - 3000:3000
  kong:
    image: kong:latest
    volumes:
      - ./kong:/usr/local/kong/declarative #injectarea fisierului de configurare la calea specificata
    environment:
      KONG_DATABASE: 'off' #obligatoriu, daca se vrea modul DB-less
      KONG_DECLARATIVE_CONFIG: /usr/local/kong/declarative/kong.yml #trebuie specificat unde anume se va gasi fisierul de configurare
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
    ports:
      - 8001:8000 #expunerea porturilor
      - 8443:8443
    deploy:
      placement:
        constraints: [node.role == manager] #constrangerea de rulare doar pe master, pentru a nu exista conflict la nivel de volume
    # networks:
    #   - internal


volumes:
  dbvolume:
  rabbitmqdata:
  rabbitmqlogs:
  pgadmindata: